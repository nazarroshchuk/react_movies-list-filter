{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchPanel/SearchPanel.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","imdbId","SearchPanel","query","handler","htmlFor","type","id","placeholder","value","onChange","App","state","filteredMovies","searchHandler","e","target","setState","filteredMoviess","moviesFromServer","filter","el","toUpperCase","search","this","Component","ReactDOM","render","document","getElementById"],"mappings":"kwEAIaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKN,UAAU,SAAf,SACGM,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,cAgB5BJ,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBGI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACzB,qBAAKZ,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOa,QAAQ,eAAeb,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEc,KAAK,OACLC,GAAG,eACHf,UAAU,QACVgB,YAAY,mBACZC,MAAON,EACPO,SAAUN,YCXPO,EAAb,4MACEC,MAAQ,CACNT,MAAO,GACPU,eAAgB,IAHpB,EAUEC,cAAgB,SAACC,GAAO,IACdN,EAAUM,EAAEC,OAAZP,MAER,EAAKQ,SAAS,CAAEd,MAAOM,IAEvB,IAAMS,EAAkB,YAAIC,GACzBC,QAAO,SAAAC,GAAE,OAA4D,IAAxDA,EAAGjC,MAAMkC,cAAcC,OAAOd,EAAMa,iBACiB,IAA9DD,EAAGhC,YAAYiC,cAAcC,OAAOd,EAAMa,kBAEjD,EAAKL,UAAS,SAAAL,GAAK,MAAK,CAAEC,eAAgBK,OAnB9C,uDAME,WACEM,KAAKP,SAAS,CAAEJ,eAAgBM,MAPpC,oBAsBE,WACE,OACE,sBAAK3B,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEW,MAAOqB,KAAKZ,MAAMT,MAClBC,QAASoB,KAAKV,gBAEhB,cAAC,EAAD,CAAYhB,OAAQ0B,KAAKZ,MAAMC,oBAEjC,qBAAKrB,UAAU,UAAf,sCAhCR,GAAyBiC,aCDzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9ad1f57d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchPanel = ({ query, handler }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          value={query}\n          onChange={handler}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nSearchPanel.propTypes = {\n  query: PropTypes.string.isRequired,\n  handler: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { SearchPanel } from './components/SearchPanel/SearchPanel';\n\nexport class App extends Component {\n  state = {\n    query: '',\n    filteredMovies: [],\n  };\n\n  componentDidMount() {\n    this.setState({ filteredMovies: moviesFromServer });\n  }\n\n  searchHandler = (e) => {\n    const { value } = e.target;\n\n    this.setState({ query: value });\n\n    const filteredMoviess = [...moviesFromServer]\n      .filter(el => el.title.toUpperCase().search(value.toUpperCase()) !== -1\n        || el.description.toUpperCase().search(value.toUpperCase()) !== -1);\n\n    this.setState(state => ({ filteredMovies: filteredMoviess }));\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchPanel\n            query={this.state.query}\n            handler={this.searchHandler}\n          />\n          <MoviesList movies={this.state.filteredMovies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}